// Code generated by ent, DO NOT EDIT.

package deployrecord

const (
	// Label holds the string label denoting the deployrecord type in the database.
	Label = "deploy_record"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldImage holds the string denoting the image field in the database.
	FieldImage = "image"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldStatusCode holds the string denoting the status_code field in the database.
	FieldStatusCode = "status_code"
	// FieldContainerHash holds the string denoting the container_hash field in the database.
	FieldContainerHash = "container_hash"
	// EdgeOperator holds the string denoting the operator edge name in mutations.
	EdgeOperator = "operator"
	// EdgeCompileRecord holds the string denoting the compile_record edge name in mutations.
	EdgeCompileRecord = "compile_record"
	// Table holds the table name of the deployrecord in the database.
	Table = "deploy_records"
	// OperatorTable is the table that holds the operator relation/edge. The primary key declared below.
	OperatorTable = "user_deploy_records"
	// OperatorInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	OperatorInverseTable = "users"
	// CompileRecordTable is the table that holds the compile_record relation/edge. The primary key declared below.
	CompileRecordTable = "compile_record_deploy_records"
	// CompileRecordInverseTable is the table name for the CompileRecord entity.
	// It exists in this package in order to avoid circular dependency with the "compilerecord" package.
	CompileRecordInverseTable = "compile_records"
)

// Columns holds all SQL columns for deployrecord fields.
var Columns = []string{
	FieldID,
	FieldImage,
	FieldCreatedAt,
	FieldStatusCode,
	FieldContainerHash,
}

var (
	// OperatorPrimaryKey and OperatorColumn2 are the table columns denoting the
	// primary key for the operator relation (M2M).
	OperatorPrimaryKey = []string{"user_id", "deploy_record_id"}
	// CompileRecordPrimaryKey and CompileRecordColumn2 are the table columns denoting the
	// primary key for the compile_record relation (M2M).
	CompileRecordPrimaryKey = []string{"compile_record_id", "deploy_record_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
